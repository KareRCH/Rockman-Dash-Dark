#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	enum WINMODE { MODE_FULL, MODE_WIN };

	// Dynamic 컴포넌트 경우 매 프레임마다 갱신해야하는 컴포넌트 집단
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };

	enum INFO {	INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };

	enum ROTATION { ROT_X, ROT_Y, ROT_Z, ROT_END };

	enum TEXTUREID { TEX_NORMAL, TEX_CUBE, TEX_VOLUME, TEX_END };

	enum RENDERID { RENDER_PRIORITY, RENDER_ALPHATEST, RENDER_NONALPHA, RENDER_ALPHA, RENDER_UI, RENDER_END };

	enum CHANNELID { SOUND_EFFECT, SOUND_BGM, SOUND_SYSTEM_EFFECT, 
			
					SOUND_PLAYER, SOUND_PLAYER_EFFECT, 
					

					// 일반몬스터용 (3)
					SOUND_ENEMY_BROWN, SOUND_ENEMY_GRAY,
					SOUND_ENEMY_NORMAL_EFFECT, 
					
					// 보스용 (4)
					SOUND_ENEMY, SOUND_ENEMY_EFFECT, 
					SOUND_ENEMY_FIRE, SOUND_ENEMY_THUNDER,
					
					SOUND_VFX, SOUND_VFX2, SOUND_VFX3, SOUND_VFX4, SOUND_UI, MAXCHANNEL };

	enum CHANNEL_GROUP_ID { BGM_GROUP, SND1_GROUP, SND2_GROUP, MAX_CHANNEL_GROUP };


	// 키 입력
	enum MOUSEKEYSTATE { DIM_LB, DIM_RB, DIM_MB, DIM_MWU, DIM_MWD, DIM_END };

	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };

	// 32비트형 플래그 enum
	enum EBIT_FLAG_32 : _uint_32
	{
		EBIT_FLAG32_0 = 1U << 0,
		EBIT_FLAG32_1 = 1U << 1,
		EBIT_FLAG32_2 = 1U << 2,
		EBIT_FLAG32_3 = 1U << 3,
		EBIT_FLAG32_4 = 1U << 4,
		EBIT_FLAG32_5 = 1U << 5,
		EBIT_FLAG32_6 = 1U << 6,
		EBIT_FLAG32_7 = 1U << 7,
		EBIT_FLAG32_8 = 1U << 8,
		EBIT_FLAG32_9 = 1U << 9,
		EBIT_FLAG32_10 = 1U << 10,
		EBIT_FLAG32_11 = 1U << 11,
		EBIT_FLAG32_12 = 1U << 12,
		EBIT_FLAG32_13 = 1U << 13,
		EBIT_FLAG32_14 = 1U << 14,
		EBIT_FLAG32_15 = 1U << 15,
		EBIT_FLAG32_16 = 1U << 16,
		EBIT_FLAG32_17 = 1U << 17,
		EBIT_FLAG32_18 = 1U << 18,
		EBIT_FLAG32_19 = 1U << 19,
		EBIT_FLAG32_20 = 1U << 20,
		EBIT_FLAG32_21 = 1U << 21,
		EBIT_FLAG32_22 = 1U << 22,
		EBIT_FLAG32_23 = 1U << 23,
		EBIT_FLAG32_24 = 1U << 24,
		EBIT_FLAG32_25 = 1U << 25,
		EBIT_FLAG32_26 = 1U << 26,
		EBIT_FLAG32_27 = 1U << 27,
		EBIT_FLAG32_28 = 1U << 28,
		EBIT_FLAG32_29 = 1U << 29,
		EBIT_FLAG32_30 = 1U << 30,
		EBIT_FLAG32_31 = 1U << 31,
	};
	
	// 64비트형 플래그 enum
	enum EBIT_FLAG_64 : _uint_64
	{
		EBIT_FLAG64_0 = 1ULL << 0,
		EBIT_FLAG64_1 = 1ULL << 1,
		EBIT_FLAG64_2 = 1ULL << 2,
		EBIT_FLAG64_3 = 1ULL << 3,
		EBIT_FLAG64_4 = 1ULL << 4,
		EBIT_FLAG64_5 = 1ULL << 5,
		EBIT_FLAG64_6 = 1ULL << 6,
		EBIT_FLAG64_7 = 1ULL << 7,
		EBIT_FLAG64_8 = 1ULL << 8,
		EBIT_FLAG64_9 = 1ULL << 9,
		EBIT_FLAG64_10 = 1ULL << 10,
		EBIT_FLAG64_11 = 1ULL << 11,
		EBIT_FLAG64_12 = 1ULL << 12,
		EBIT_FLAG64_13 = 1ULL << 13,
		EBIT_FLAG64_14 = 1ULL << 14,
		EBIT_FLAG64_15 = 1ULL << 15,
		EBIT_FLAG64_16 = 1ULL << 16,
		EBIT_FLAG64_17 = 1ULL << 17,
		EBIT_FLAG64_18 = 1ULL << 18,
		EBIT_FLAG64_19 = 1ULL << 19,
		EBIT_FLAG64_20 = 1ULL << 20,
		EBIT_FLAG64_21 = 1ULL << 21,
		EBIT_FLAG64_22 = 1ULL << 22,
		EBIT_FLAG64_23 = 1ULL << 23,
		EBIT_FLAG64_24 = 1ULL << 24,
		EBIT_FLAG64_25 = 1ULL << 25,
		EBIT_FLAG64_26 = 1ULL << 26,
		EBIT_FLAG64_27 = 1ULL << 27,
		EBIT_FLAG64_28 = 1ULL << 28,
		EBIT_FLAG64_29 = 1ULL << 29,
		EBIT_FLAG64_30 = 1ULL << 30,
		EBIT_FLAG64_31 = 1ULL << 31,
		EBIT_FLAG64_32 = 1ULL << 32,
		EBIT_FLAG64_33 = 1ULL << 33,
		EBIT_FLAG64_34 = 1ULL << 34,
		EBIT_FLAG64_35 = 1ULL << 35,
		EBIT_FLAG64_36 = 1ULL << 36,
		EBIT_FLAG64_37 = 1ULL << 37,
		EBIT_FLAG64_38 = 1ULL << 38,
		EBIT_FLAG64_39 = 1ULL << 39,
		EBIT_FLAG64_40 = 1ULL << 40,
		EBIT_FLAG64_41 = 1ULL << 41,
		EBIT_FLAG64_42 = 1ULL << 42,
		EBIT_FLAG64_43 = 1ULL << 43,
		EBIT_FLAG64_44 = 1ULL << 44,
		EBIT_FLAG64_45 = 1ULL << 45,
		EBIT_FLAG64_46 = 1ULL << 46,
		EBIT_FLAG64_47 = 1ULL << 47,
		EBIT_FLAG64_48 = 1ULL << 48,
		EBIT_FLAG64_49 = 1ULL << 49,
		EBIT_FLAG64_50 = 1ULL << 50,
		EBIT_FLAG64_51 = 1ULL << 51,
		EBIT_FLAG64_52 = 1ULL << 52,
		EBIT_FLAG64_53 = 1ULL << 53,
		EBIT_FLAG64_54 = 1ULL << 54,
		EBIT_FLAG64_55 = 1ULL << 55,
		EBIT_FLAG64_56 = 1ULL << 56,
		EBIT_FLAG64_57 = 1ULL << 57,
		EBIT_FLAG64_58 = 1ULL << 58,
		EBIT_FLAG64_59 = 1ULL << 59,
		EBIT_FLAG64_60 = 1ULL << 60,
		EBIT_FLAG64_61 = 1ULL << 61,
		EBIT_FLAG64_62 = 1ULL << 62,
		EBIT_FLAG64_63 = 1ULL << 63,
	};

	enum EGO_CLASS
	{
		ECLASS_NONE,
		ECLASS_PLAYER,
		ECLASS_BROWN,
		ECLASS_GREY,
		ECLASS_BOSS,
		ECLASS_FOOD,
		ECLASS_WEAPON,
		ECLASS_THROW,
		ECLASS_INTERACTION,
		ECLASS_BUILDING,
	};
}
#endif // Engine_Enum_h__
